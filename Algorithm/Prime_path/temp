Enter file contents here#include <stdio.h>
#define MAX 10000

int arr[MAX];
int check[MAX];
int total[MAX];
int prime[MAX]; //소수를 담는 배열


int main(void)
{
	int temp1=0, temp2=0, temp3=0, temp4=0; //각 자리수 변수
	int n, k; //입력 받는 변수들
	int pushx=0, subx=0; //데이터 큐를 가리키는 인덱스
	int pushy=0, suby=0; //카운터 값을 가리키는 인덱스
	int i,j,g;
	int bun=0;
	int gomsa=0;

	int count=0;

	int start=0;
	int yu=0;
	int sub=0;

	int add1=0;
	int add2=0;
	int add3=0;

	//소수를 구한다 
	//인덱스가 0인게 소수이다.
	for(i=2; i*i<=10000; i++){
		for(j=i+i; j<10000; j+=i){
			prime[j] = 1;
		}
	}

	scanf("%d",&n);
	scanf("%d",&k);

	if(n==k)
		printf("0\n");
	else{
		arr[pushx++] = n; //같지 않으면 큐에 집어 넣는다
		total[pushy++] = 0; //방문횟수를 큐에 집어 넣는다.
		check[n] = 1; // 방문한 인덱스에 1을 집어 넣는다.

		while(1)
		{


			for(i=0;i<4;i++)
			{
				//큐에서 값을 꺼낸다.
				bun = arr[subx++];
				count = total[suby++]; // 방문횟수

				temp1 = bun % 10; // 1의자리
				bun = bun / 10;
				temp2 = bun % 10;
				if(i<4 && start==0)
				{
					if(i==3)
					{
						start=1;
					}
					bun=n;
				}

				else
				{
					bun=arr[yu];
				}
				temp1=bun/1000;
				add1=bun%1000;
				temp2=add1/100;
				add2=add1%100;
				temp3=add2/10;
				add3=add2%10;
				temp4=add3;

				if(i==0)
				{
					bun-=temp4;
				}
				else if(i==1)
				{
					bun-=temp3;
				}
				else if(i==2)
				{
					bun-=temp2;
				}
				else if(i==3)
				{
					bun-=temp1;
				}

				for(j=0;j<10;j++)
				{
					temp1=bun/1000;
					add1=bun%1000;
					temp2=add1/100;
					add2=add1%100;
					temp3=add2/10;
					add3=add2%10;
					temp4=add3;


					if(i==0 && (temp4+1)<10)
					{
						bun+=1;
					}
					else if(i==1 && (temp3+1)<10)
					{
						bun+=10;
					}

					else if(i==2 && (temp2+1)<10)
					{
						bun+=100;
					}

					else if(i==3 && (temp1+1)<10)
					{
						bun+=1000;
					}
					else
					{
						break;
					}

					if(bun<1000)
					{
						continue;
					}


					for(g=2;g<bun;g++)
					{
						gomsa=bun%g;
						if(gomsa==0)
						{
							push=1;
							break;
						}
						gomsa=0;
					}
					sub=bun;
					if(check[sub]==1 || bun >9999)
					{
						break;
					}

					if(push==0)
					{
						check[bun]=1;

						if(start==0)
						{
							total[count]+=1;
						}
						if(start==1)
						{
							total[count]=total[yu]+1;
						}
						arr[count++]=bun;
						//printf("%d\n",arr[count-1]);

					}
					if(bun==k)
					{
						end=1;
						printf("%d",total[count-1]);
						break;
					}

					push=0;
				}

				if(end==1)
				{
					break;
				}
				bun=0;
			}
			if(end==1)
			{
				break;
			}

		}
	}



	printf("asdfsdafadsfadsf");
	printf("asdfsdafadsfadsf");
	printf("asdfsdafadsfadsf");


	return 0;
}
